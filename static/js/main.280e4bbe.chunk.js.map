{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["PockemonRow","pokemon","name","english","type","join","App","React","useState","filter","filterSet","style","margin","width","marginTop","className","value","onChange","e","target","pokemonList","toLowerCase","includes","slice","map","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+9hMAMMA,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAClB,+BACE,6BAAKA,EAAQC,KAAKC,UAClB,6BAAKF,EAAQG,KAAKC,KAAK,aAsCZC,MA1Bf,WAAgB,IAAD,EACeC,IAAMC,SAAS,IAD9B,mBACNC,EADM,KACEC,EADF,KAEb,OACE,sBAAKC,MAAO,CAAEC,OAAQ,OAAQC,MAAO,IAAKC,UAAW,QAArD,UACE,oBAAIC,UAAU,QAAd,4BACA,uBAAOC,MAAOP,EAAQQ,SAAU,SAACC,GAAD,OAAOR,EAAUQ,EAAEC,OAAOH,UAC1D,wBAAOH,MAAM,OAAb,UACE,gCACE,+BACE,sCACA,2CAGJ,gCACGO,EACEX,QAAO,SAACR,GAAD,OAAaA,EAAQC,KAAKC,QAAQkB,cAAcC,SAASb,EAAOY,kBACvEE,MAAM,EAAG,IACTC,KAAI,SAACvB,GAAD,OACH,cAAC,EAAD,CAA8BA,QAASA,GAArBA,EAAQwB,gBC3BzBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.280e4bbe.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nimport PropTypes from 'prop-types';\nimport pokemonList from './pokemon.json';\n\nconst PockemonRow = ({ pokemon }) => (\n  <tr>\n    <td>{pokemon.name.english}</td>\n    <td>{pokemon.type.join(' , ')}</td>\n  </tr>\n);\n\nPockemonRow.propTypes = {\n  pokemon: PropTypes.shape({\n    type: PropTypes.arrayOf(PropTypes.string),\n    name: PropTypes.shape({\n      english: PropTypes.string,\n    }),\n  }),\n};\nfunction App() {\n  const [filter, filterSet] = React.useState('');\n  return (\n    <div style={{ margin: 'auto', width: 800, marginTop: '1rem' }}>\n      <h1 className=\"title\">Pokemon Search</h1>\n      <input value={filter} onChange={(e) => filterSet(e.target.value)} />\n      <table width=\"100%\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Type</th>\n          </tr>\n        </thead>\n        <tbody>\n          {pokemonList\n            .filter((pokemon) => pokemon.name.english.toLowerCase().includes(filter.toLowerCase()))\n            .slice(0, 20)\n            .map((pokemon) => (\n              <PockemonRow key={pokemon.id} pokemon={pokemon} />\n            ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}